package com.simon.gas_station;

public class Gas_Station {

	
	/*
	 * 分析:
	 * 看到这题,想到了算法导论里面的势能法,感觉比较像,是否可以使用
	 * 基本思路:
	 * 计算u[i]=gas[i]-cost[i],
	 * 若u[i]>0,说明富余,存下到total
	 * 若u[i]<=0,说明不够,从之前存下来的(total)中去取
	 * 若total<0,则说明入不敷出,不可行
	 */
	
	/*
	 * 结果:
	 * 超时,因为是n^n的时间复杂度,但也没要求时间复杂度,囧rz
	 */
	/*public int canCompleteCircuit(int[] gas, int[] cost) {
        int[] u=new int[gas.length];
        for(int i=0;i<gas.length;i++){
        	u[i] = gas[i] - cost[i];
        }
        for(int i=0;i<gas.length;i++){
        	int total=0;
        	int j;
        	for(j=0;j<gas.length;j++){
        		total+=u[(i+j)%gas.length];
        		//入不敷出
        		if(total<0)
        			break;
        	}
        	if(j!=gas.length)
        		continue;
        	else
        		return i;
        }
        return -1;
    }*/
	
	public int canCompleteCircuit(int[] gas, int[] cost) {
       return 0; 
    }
	
	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Gas_Station gs=new Gas_Station();
		int[] gas={1,2};
		int[] cost={2,1};
		System.out.println(gs.canCompleteCircuit(gas, cost));
	}

}
