package com.simon.list_merge;

class ListNode {
	int val;
	ListNode next;
	ListNode(int x) { val = x; }
}

public class ListMerge {

	public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
		//两者都为空的情形
		if(l1==null && l2==null)
			return null;
		if(l1==null)
			return l2;
		if(l2==null)
			return l1;
		//初始化
		ListNode cmp=l1,tmp=l2;
		ListNode s=new ListNode(0);
		ListNode start=s;
		s.next=tmp;
		while(true){
			while(cmp.val>tmp.val && tmp!=null){
				s=tmp;
				tmp=tmp.next;
			}
			if(tmp==null){
				s.next=cmp;
				break;
			}
			s.next=cmp;
			//更新s!!!
			s=cmp;
			if(cmp.next==null){
				cmp.next=tmp;
				break;
			}
			cmp=tmp;
			tmp=s.next;
		}
		
		
		return start.next;
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode t1=new ListNode(1);
		ListNode t2=new ListNode(3);
		ListNode t3=new ListNode(5);
		ListNode t4=new ListNode(7);
		ListNode t5=new ListNode(2);
		ListNode t6=new ListNode(4);
		ListNode t7=new ListNode(6);
		t1.next=t2;
		t2.next=t3;
		t3.next=t4;
		t5.next=t6;
		t6.next=t7;
		ListMerge lm=new ListMerge();
		ListNode m=lm.mergeTwoLists(t1,t5);
		while(m!=null){
			System.out.println(m.val);
			m=m.next;
		}
		
	}

}
